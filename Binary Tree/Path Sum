https://leetcode.com/problems/path-sum/
**************************************SOLUTION****************************************

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool helper(TreeNode* root, int targetSum, int currentSum)
    {
        if(root == NULL)
            return false;
        if(root->left == NULL && root->right == NULL)
        {
            currentSum = currentSum + root->val;
            if(currentSum == targetSum)
                return true;
            else
                return false;
        }
        else
        {
            
            currentSum = currentSum + root->val;
            bool left = helper(root->left , targetSum , currentSum);
            bool right = helper(root->right , targetSum, currentSum);
            return (left || right);
        }
    }
    bool hasPathSum(TreeNode* root, int targetSum) 
    {
        if(root == NULL)
            return false;
        else
        {
            int currentSum = 0;
            return helper(root , targetSum , currentSum);
        }
        
    }
};
