https://leetcode.com/problems/univalued-binary-tree/

*************************************************SOLUTION*********************************************************

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool helper(TreeNode* root , int val)
    {
        if(root == NULL)
            return true;
        else
        {
            bool flag1, flag2, flag3;
            if(root->val == val)
                flag1 = true;
            else
                flag1 = false;
            flag2 = helper(root->left , val);
            flag3 = helper(root->right , val);
            return (flag1 && flag2 && flag3);
                
        }
    }
    bool isUnivalTree(TreeNode* root) 
    {
        int val = root->val;
        return helper(root , val);
    }
};
