https://leetcode.com/problems/broken-calculator/

****************************************************SOLUTION**************************************************

RECURSIVE APPROACH :
class Solution {
public:
    int brokenCalc(int startValue, int target) 
    {
        if(startValue >= target)
            return startValue - target;
        if(target % 2 == 0)
        {
            return 1 + brokenCalc(startValue , target / 2);
        }
        else
        {
            return 1 + brokenCalc(startValue , target + 1);
        }
    }
};

TIME COMPLEXITY = O(logn)
SPACE COMPLEXITY = O(1)

________________________________________________________________________________________________________

ITERATIVE APPROACH :

class Solution {
public:
    int brokenCalc(int startValue, int target) 
    {
       int result = 0;
       while(startValue < target)
       {
           if(target % 2 == 0)
           {
               result++;
               target = target / 2;
           }
           else
           {
               result++;
               target = target + 1;
           }
       }
    return result + (startValue - target); 
    }
};

TIME COMPLEXITY = O(logn)
SPACE COMPLEXITY = O(1)
