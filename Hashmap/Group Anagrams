class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) 
    {
        unordered_map<string,vector<string>> map;
        for(int i = 0; i <strs.size(); i++)
        {
            string curr_string = strs[i];
            string sorted_string = curr_string;
            sort(sorted_string.begin(),sorted_string.end());
            auto itr = map.find(sorted_string);
            if(itr != map.end())
            {
                map[sorted_string].push_back(curr_string);
            }
            else
            {
                map[sorted_string].push_back(curr_string);
            }
        }
        vector<vector<string>> result;
        unordered_map<string,vector<string>> :: iterator itr;
        for(itr = map.begin(); itr != map.end(); itr++)
        {
            vector<string> temp;
            for(int i = 0; i < itr->second.size(); i++)
            {
                temp.push_back(itr->second.at(i));
            }
            result.push_back(temp);
        }
        return result;
    }
};
