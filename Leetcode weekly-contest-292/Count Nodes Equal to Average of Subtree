https://leetcode.com/contest/weekly-contest-292/problems/count-nodes-equal-to-average-of-subtree/

********************************************SOLUTION*************************************

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int count = 0;
    
    pair<int,int> helper(TreeNode* root)
    {
        if(root == NULL)
        {
            pair<int,int> result;
            result.first = 0; //holding the sum
            result.second = 0;//holding number of node
            return result;
        }
        else
        {
            pair<int,int> leftresult = helper(root->left);
            pair<int,int> rightresult = helper(root->right);
            
            int curr_sum = leftresult.first + rightresult.first + root->val;
            int curr_node_count = leftresult.second + rightresult.second + 1;
            int curr_avg = curr_sum / curr_node_count;
            if(curr_avg == root->val)
                count++;
            pair<int,int> output;
            output.first = curr_sum;
            output.second = curr_node_count;
            return output;
        }
    }
    
    int averageOfSubtree(TreeNode* root) 
    {
        pair<int,int> result;
        result = helper(root);
        return count;
    }
};
