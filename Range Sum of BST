https://leetcode.com/problems/range-sum-of-bst/

*********************************************SOLUTION************************************************

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    
    int rangeSumBST(TreeNode* root, int low, int high) 
    {
        if(root == NULL)
            return 0;
    
        else
        {
            
            
            int left_sum = 0;
            int right_sum = 0;
            left_sum = rangeSumBST(root->left , low, high);
            right_sum = rangeSumBST(root->right, low, high);
            int data = root->val;
            if(data >= low && data <= high)
            {
                return (data + left_sum + right_sum);
            }
            else
            {
                return (left_sum + right_sum);
            }
            
        }
        
    }
};
