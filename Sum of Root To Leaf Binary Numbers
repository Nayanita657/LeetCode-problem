https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers/

*******************************************SOLUTION*************************************************

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> result;
    
    void helper(TreeNode* root , string temp)
    {
        if(root == NULL)
            return;
        if(root->left == NULL && root->right == NULL)
        {
            temp+=to_string(root->val);
            //inserting in vector
            result.push_back(temp);
        }
        
        else
        {
            temp+=to_string(root->val);
            helper(root->left , temp);
            helper(root->right , temp);
        }
    }
    
    
    
    int sumRootToLeaf(TreeNode* root) 
    {
        int sum = 0;
        string temp;
        helper(root , temp);
        for(int i = 0; i < result.size(); i++)
        {
            
            string current_num = result[i];
            sum = sum + stoi(current_num , 0, 2);
        }
        return sum;
        
        
    }
};
